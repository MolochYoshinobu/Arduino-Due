#include <DueTimer.h>

 //int PortNo[]={0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,1,0,0,0,0,3,3,0,0,1,2,0,2,2,2,2,2,0,3,3,1}; 
 int PortNo[]={0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,1,0,0,0,0,3,3,1,2,0,2,2,2,2,2,0,3,3,1};
 //            1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8
 //int RegisterNo[]={16,24,23,22,6,4,3,2,17,18,19,20,15,16,1,0,13,12,10,11,12,13,5,4,8,9,25,28,29,25,24,23,22,21,28,7,8,27};
   int RegisterNo[]={16,24,23,22,6,4,3,2,17,18,19,20,15,16,1,0,13,12,10,11,12,13,5,4,25,28,29,25,24,23,22,21,28,7,8,27};
  //                 01,02,03,04,5,6,7,8,09,10,11,12,13,14,5,6,17,18,19,20,21,22,3,4,05,06,27,28,29,30,31,32,03,4,5,06,7,8
 uint32_t Data[4]={0,0,0,0};
 bool flg;
  
void setup() {
  int i;
  Serial.begin(115200);
  Serial.setTimeout(100);
   for(i=2;i<=21;i++){
    pinMode(i, OUTPUT);
  } 
  for(i=54;i<=69;i++){
    pinMode(i, OUTPUT);
  } 

  Serial.println("開始");
  Start();
}

void Start(){
  int i,j,k;
  int DataSize;
  int RS422Size;
  int RecNo;
  flg=false;
  DataSize=sizeof(PortNo)/sizeof(PortNo[0]);
  RS422Size=DataSize/2;
  int RecData[RS422Size];
  String RecStr;
  String RecStr2[RS422Size];
   //REG_PIOA_PER=0xffffffff;
  //REG_PIOB_PER=0xffffffff;
  // REG_PIOA_OER=0xffffffff;
  // REG_PIOB_OER=0xffffffff;
  // REG_PIOC_OER=0xffffffff;
  // REG_PIOD_OER=0xffffffff;
 
  //RecStr="01011010";
  Serial.print("RS422 信号数(1～16)：");
  RecStr=Serialread_func();
  RS422Size=RecStr.toInt();
  Serial.println();
  Serial.print("設定値：");
  RecStr=Serialread_func();
  Serial.println(RecStr);

   for(i=1;i<=RS422Size;i++){
     RecStr2[i-1]=RecStr.substring(i-1,i);
     RecData[i-1]=RecStr2[i-1].toInt();  
     //Serial.println(RecData[i-1],BIN);
   }
   j=0;
  for(i=1;i<=RS422Size;i++){
  
    Data[PortNo[j]]=Data[PortNo[j]] |= (RecData[i-1]<<RegisterNo[j]);
    j++;
    Data[PortNo[j]]=Data[PortNo[j]] |= ((RecData[i-1] ^= 1)<<RegisterNo[j]);
    j++;
  }
 
  //Serial.println(Data[0],BIN);
  //Serial.println(Data[1],BIN);
  //Serial.println(Data[2],BIN);
  //Serial.println(Data[3],BIN);
  REG_PIOA_ODSR=Data[0];
  REG_PIOB_ODSR=Data[1];
  REG_PIOC_ODSR=Data[2];
  REG_PIOD_ODSR=Data[3];

  flg=true;
}
void loop(){
    if (flg == true){
    Start();
    }
}
String Serialread_func(){
  String input_data;
  String output_data;
  while(1){
    if (Serial.available() > 0 ) {
      input_data =Serial.readString();
     Serial.print(input_data);
      if (input_data == "\b"){
       Serial.print("\033[0K");
        output_data = output_data.substring(0, output_data.length() - 1);
        input_data = "";
      }
      else if (input_data == "\r") {
        if (output_data == "") {}
        else {
         Serial.println();
          return output_data;
          break;
        }
      }
    else {
      output_data = output_data + input_data;
      }
    }     
  }
}
